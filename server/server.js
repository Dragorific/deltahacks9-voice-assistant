import dotenv from "dotenv";
import { ChatGPTAPIBrowser } from 'chatgpt';
import express from 'express'
import http from 'http'
import { Server } from "socket.io";

dotenv.config();

const app = express();
const server = http.createServer(app);
const io = new Server(server);

app.use(express.json())

async function main(){
    const api = new ChatGPTAPIBrowser({
        email: process.env.OPENAI_EMAIL,
        password: process.env.OPENAI_PASSWORD,
    })
    
    let users = {};
    let code = "";

    await api.initSession()

    function string_between_strings(startStr, endStr, str) {
        let pos = str.indexOf(startStr) + startStr.length;
        return str.substring(pos, str.indexOf(endStr, pos));
    }

    app.post("/api/voice-chat", async (req, res) => {
        const message = req.body.question.toLowerCase();
        console.log(message);

        if(message.startsWith("send the code to")){

            if(code.length === 0){
                res.json({"response": "There is no code generated by the last query"});
            } else {
                const device = message.substring(17);
                if(device.length === 0 || users[device] === undefined){
                    res.json({"response": "No such connected device exists"});
                } else {
                    io.to(users[device]).emit("code", {"response": code});
                    res.json({"response": "Code successfully copied to "+device});
                }
            }
        } else {

            const result = await api.sendMessage(message);
            const response = result.response;

            let codeBlock = string_between_strings("```",  "```", response);
            console.log(codeBlock)

            codeBlock = codeBlock.split("\n").slice(1).join("\n")
            if(codeBlock.length !== 0){
                code = codeBlock;
                console.log(code);
            }
            

            res.json({"response": response});
        }
    })

    io.on('connection', async (socket) => {
        let alias = socket.handshake.query.alias;
        console.log('User '+alias+' connected with id: '+socket.id);
        users[alias] = socket.id;
    });
}

main();

server.listen(3000, () => {
    console.log('listening on *:3000');
});