import dotenv from "dotenv";
import { ChatGPTAPIBrowser } from 'chatgpt';
import express from 'express'
import http from 'http'
import { Server } from "socket.io";

dotenv.config();

const app = express();
const server = http.createServer(app);
const io = new Server(server);

app.use(express.json())

async function main(){
    const api = new ChatGPTAPIBrowser({
        email: process.env.OPENAI_EMAIL,
        password: process.env.OPENAI_PASSWORD,
    })
    
    let users = {};
    let code = "";

    await api.initSession()

    function string_between_strings(startStr, endStr, str) {
        let pos = str.indexOf(startStr) + startStr.length;
        return str.substring(pos, str.indexOf(endStr, pos));
    }

    app.post("/api/voice-chat", async (req, res) => {
        const message = req.body.question.toLowerCase();
        console.log(message);

        if(message.startsWith("send the code to")){
            if(code.length === 0){
                res.json({"response": "There is no code generated by the last query"});
            } else {
                const device = message.substring(17);
                if(device.length === 0 || users[device] === undefined){
                    res.json({"response": "No such connected device exists"});
                } else {
                    io.to(users[device]).emit("code", {"response": code});
                    res.json({"response": "Code successfully copied to "+device});
                }
            }
        } else if (message.startsWith("add the code to")){
            if(code.length === 0){
                res.json({"response": "There is no code generated by the last query"});
            } else {
                const info = message.substring(16).split("in");

                if(info.length !== 2){
                    res.json({"response": "Invalid query, please use the following command format 'add code to file name in device name"});
                } else {
                    const file = info[0].trim();
                    const device = info[1].trim();

                    if(file.length === 0 || device.length === 0 || users[device] === undefined){
                        res.json({"response": "Invalid device or file name"});
                    } else {
                        io.to(users[device]).emit("append", {"code": code, "file": file});
                        res.json({"response": "Code successfully add to " + file +" in "+device});
                    }
                }
            }
        } else if (message.startsWith("turn living room light on")){
            io.to(users["arduino"]).emit("light", "on");
            res.json({"response": "Turned living room light on"});
        } else if (message.startsWith("turn living room light off")){
            io.to(users["arduino"]).emit("light", "off");
            res.json({"response": "Turned living room light off"});
        } else if (message.startsWith("turn bedroom light on")){
            io.to(users["arduino"]).emit("light", "on2");
            res.json({"response": "Turned bedroom light on"});
        } else if (message.startsWith("turn bedroom light off")){
            io.to(users["arduino"]).emit("light", "off2");
            res.json({"response": "Turned bedroom light off"});
        } else if (message.startsWith("can you introduce yourself")) {
            message = "introduce yourself as vance as a butler"
            const result = await api.sendMessage(message);
            const response = result.response;

            res.json({"response": response});
        } else if (message.includes("weather")) {
            // Take the last element in the string, assumed to be the location 
            let messageList = message.split(" ");
            let location = messageList[messageList.length - 1];
            const weather_api_key = process.env.weather_api_key;
            
            // Query using Geocode API to find latitude and longitude
            const latlon_query = 'http://api.openweathermap.org/geo/1.0/direct?q='+location+'&limit=5&appid='+ weather_api_key;
            const responsell = await fetch(latlon_query);
            let data = await responsell.json();
            
            // Take out the country
            const country = data[0].country;
            const state = data[0].state;
            const weather_query = "https://api.openweathermap.org/data/2.5/weather?lat=" + data[0].lat + "&lon=" + data[0].lon + "&appid=" + weather_api_key;
            //console.log("weatherq: ", weather_query)
            const response = await fetch(weather_query);
            data = await response.json();
            //console.log(data);
            const temp = Math.round(data.main.temp - 273.15);
            res.json({"response": "The current weather in "+ country + ", " + state + ", " + location + " is around " + temp + " degrees celcius."});
        } else {
            const result = await api.sendMessage(message);
            const response = result.response;

            let codeBlock = string_between_strings("```",  "```", response);
            console.log(codeBlock)

            codeBlock = codeBlock.split("\n").slice(1).join("\n")
            if(codeBlock.length !== 0){
                code = codeBlock;
                console.log(code);
            }

            res.json({"response": response});
        }
    })

    io.on('connection', async (socket) => {
        let alias = socket.handshake.query.alias;
        console.log('User '+alias+' connected with id: '+socket.id);
        users[alias] = socket.id;
    });
}

main();

server.listen(3000, () => {
    console.log('listening on *:3000');
});